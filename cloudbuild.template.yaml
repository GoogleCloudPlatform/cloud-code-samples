steps:
- id: 'create k8s namespace'
  name: 'gcr.io/cloud-builders/kubectl'
  args: ['create', 'namespace', 'test-${_LANG}-${_APP}-$BUILD_ID']
  waitFor: ['-']

- id: 'deploy to staging'
  name: 'gcr.io/$PROJECT_ID/skaffold:alpha'
  args: ['run', 
         '-p', 'cloudbuild',
         '-l', '$BUILD_ID',
         '-n', 'test-$BUILD_ID']
  dir: '/workspace/${_LANG}/${_LANG}-${_APP}'
  waitFor: ['create k8s namespace']

- id: 'get endpoint'
  name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: 'bash'
  args: 
  - '-c'
  - |
    get_externalIp() {
      kubectl get service ${_LANG}-${_APP}-external --namespace=test-${_LANG}-${_APP}-$BUILD_ID -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
    }

    until [[ -n "$(get_externalIp)" ]]; do
        echo "querying for external ip"
        sleep 3
    done

    echo "$(get_externalIp)" > _externalIP # save external Ip for use in next step
    echo "External Ip for ${_LANG}-${_APP}-external is $(cat _externalIP)"
  waitFor: ['deploy to staging']

- id: 'integration tests'
  name: 'gcr.io/cloud-builders/curl'
  entrypoint: '/bin/bash'
  args:
  - '-c'
  - |
    ./integration_tests.sh --app=${_APP} --ip=$(cat _externalIP)

options:
  env:
    # location/name of GKE cluster (used by all kubectl commands)
    - CLOUDSDK_COMPUTE_ZONE=us-central1-a
    - CLOUDSDK_CONTAINER_CLUSTER=staging    
    - SKAFFOLD_DEFAULT_REPO=gcr.io/$PROJECT_ID

