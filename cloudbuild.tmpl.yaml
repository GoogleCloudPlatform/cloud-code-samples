steps:
- id: 'create namespace'
  name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: 'bash' ## bash used for env var to work in args
  # TODO: bug...removed because kubectl does not get context here
  # TODO: seems like context is preserved in other steps because the gcloud creates .kubeconfig?
  #args: ['-c', 'kubectl create namespace $$TEST_NAMESPACE']
  args:
  - '-c'
  - |
    kubectl config view
    gcloud container clusters get-credentials $$CLOUDSDK_CONTAINER_CLUSTER
    kubectl config view
    kubectl create namespace $$TEST_NAMESPACE

- id: 'deploy to staging'
  name: 'gcr.io/$PROJECT_ID/skaffold:alpha'
  entrypoint: 'bash'
  # args: ['-c', 'skaffold run -p cloudbuild -l $BUILD_ID -n $$TEST_NAMESPACE']
  args:
  - '-c'
  - |
    skaffold run -p cloudbuild -l $BUILD_ID -n $$TEST_NAMESPACE -d $$SKAFFOLD_DEFAULT_REPO

  dir: '/workspace/${_LANG}/${_LANG}-${_APP}'
  waitFor: ['create namespace']

- id: 'get endpoint'
  name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
      get_externalIP() {
        kubectl get service $$APP_SERVICE --namespace $(echo $$TEST_NAMESPACE) -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
      }
     
      until [[ -n "$(get_externalIP)" ]]; do
        echo "querying for external ip"
        sleep 3
      done

      echo "$(get_externalIP)" > _externalIP
      echo "external IP for $$APP_SERVICE is $(cat _externalIP)"
  waitFor: ['deploy to staging']

- id: 'integration tests'
  name: 'gcr.io/cloud-builders/curl'
  # TODO: this is weird! cloud-builders should be consistent with bash entrypoint
  entrypoint: '/bin/bash'
  args:
  - '-c'
  - |
    if [ "${_APP}" = "hello-world" ]
    then
        keyword='Hello'
    fi
    if [ "${_APP}" = "guestbook" ]
    then
        keyword='Guestbook'
    fi
    ./test_connection.sh -r 20 -i 3 -u http://$(cat _externalIP)
    ./test_content.sh -r 20 -i 3 -u http://$(cat _externalIP) -k $keyword 
  waitFor: ['get endpoint']

- id: 'delete namespaces'
  name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    kubectl delete namespace $$TEST_NAMESPACE
  waitFor: ['integration tests']

options:
    env:
    - CLOUDSDK_COMPUTE_ZONE=us-central1-a
    - CLOUDSDK_CONTAINER_CLUSTER=staging
    - SKAFFOLD_DEFAULT_REPO=gcr.io/$PROJECT_ID
    - TEST_NAMESPACE=test-$BUILD_ID-$_LANG-$_APP
    - APP_SERVICE=${_LANG}-${_APP}-external
