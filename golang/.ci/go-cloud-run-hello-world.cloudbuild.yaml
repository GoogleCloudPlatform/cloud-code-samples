steps:

- id: 'Build Container Image'
  name: 'gcr.io/cloud-builders/docker:latest'
  args: ['build', '-t', 'gcr.io/${PROJECT_ID}/${_SERVICE_TAG}:${COMMIT_SHA}', '.']
  dir: 'golang/go-cloud-run-hello-world'

- id: 'Push Container Image'
  name: 'gcr.io/cloud-builders/docker:latest'
  args: ['push', 'gcr.io/${PROJECT_ID}/${_SERVICE_TAG}:${COMMIT_SHA}']

- id: 'Deploy to Cloud Run'
  name: 'gcr.io/cloud-builders/gcloud:$_CLOUDSDK_VERSION'
  args:
  - 'run'
  - 'deploy'
  - '${_SERVICE}-${COMMIT_SHA}'
  - '--image'
  - 'gcr.io/${PROJECT_ID}/${_SERVICE_TAG}:${COMMIT_SHA}'
  - '--allow-unauthenticated'
  - '--region'
  - '${_CLOUDSDK_REGION}'
  - '--platform'
  - 'managed'

- id: 'Get Cloud Run URL'
  name: 'gcr.io/cloud-builders/gcloud:$_CLOUDSDK_VERSION'
  entrypoint: '/bin/bash'
  args:
  - '-c'
  - |
    get_url() {
        gcloud run services describe ${_SERVICE}-${COMMIT_SHA} --format 'value(status.url)' \
          --platform managed --region ${_CLOUDSDK_REGION}
    }
    echo $(get_url) > _service_url
    echo "Cloud Run URL for ${_SERVICE} is $(cat _service_url)"

- id: 'Integration Tests'
  name: 'golang:1.14'
  entrypoint: '/bin/bash'
  args:
  - '-c'
  - |
    SERVICE_URL=$(cat _service_url) go test -v .
  dir: 'golang/go-cloud-run-hello-world'
  
- id: 'Teardown'
  name: 'gcr.io/cloud-builders/gcloud:$_CLOUDSDK_VERSION'
  entrypoint: '/bin/bash'
  args:
  - '-c'
  - |
    set -x
    gcloud --quiet container images delete gcr.io/${PROJECT_ID}/${_SERVICE_TAG}:${COMMIT_SHA}
    gcloud --quiet run services delete ${_SERVICE}-${COMMIT_SHA} --region ${_CLOUDSDK_REGION} --platform managed
    set +x
    echo "View build details in the console: https://console.cloud.google.com/cloud-build/builds/${BUILD_ID}"

# Uncomment if skipping teardown to associate build with container image.
# images:
# - 'gcr.io/${PROJECT_ID}/${_SERVICE}:${COMMIT_SHA}'

substitutions:
  _CLOUDSDK_VERSION: latest
  _CLOUDSDK_REGION: us-central1
  _SERVICE: hello-world
  _SERVICE_TAG: go-cloud-run-hello-world
