steps:
- id: Generate unique service name
  name: 'gcr.io/cloud-builders/gcloud:$_CLOUDSDK_VERSION'
  entrypoint: '/bin/bash'
  args:
  - '-c'
  - |
    random-string() {
      cat /dev/urandom | LC_CTYPE=C tr -dc 'a-z0-9' | head -c 15
    }
    echo $(random-string) > _RND
    echo "Cloud Run Service Name is $_SERVICE-$(cat _RND)"
  dir: '${_SAMPLE_DIR}'

- id: 'Build Container Image'
  name: 'gcr.io/cloud-builders/docker:latest'
  args: ['build', '-t', 'gcr.io/${PROJECT_ID}/${_SERVICE}:${COMMIT_SHA}', '.']
  dir: '${_SAMPLE_DIR}'

- id: 'Push Container Image'
  name: 'gcr.io/cloud-builders/docker:latest'
  args: ['push', 'gcr.io/${PROJECT_ID}/${_SERVICE}:${COMMIT_SHA}']

- id: Deploy to Cloud Run
  name: 'gcr.io/cloud-builders/gcloud:$_CLOUDSDK_VERSION'
  entrypoint: '/bin/bash'
  args:
  - '-c'
  - |
    gcloud run deploy $_SERVICE-$(cat _RND) \
     --image gcr.io/$PROJECT_ID/$_SERVICE:$COMMIT_SHA \
     --region $_REGION --platform managed --allow-unauthenticated
  dir: '${_SAMPLE_DIR}'

- id: 'Get Cloud Run URL'
  name: 'gcr.io/cloud-builders/gcloud:$_CLOUDSDK_VERSION'
  entrypoint: '/bin/bash'
  args:
  - '-c'
  - |
    get_url() {
        gcloud run services describe $_SERVICE-$(cat _RND) --format 'value(status.url)' \
          --platform managed --region ${_REGION}
    }
    echo $(get_url) > _service_url
    echo "Cloud Run URL for $_SERVICE-$(cat _RND) is $(cat _service_url)"
  dir: '${_SAMPLE_DIR}'

- id: 'Integration Tests'
  name: 'golang:1.14'
  entrypoint: '/bin/bash'
  args:
  - '-c'
  - |
    export SERVICE_URL=$(cat _service_url) && go test -v .
  dir: '${_SAMPLE_DIR}'
  
- id: 'Teardown'
  name: 'gcr.io/cloud-builders/gcloud:$_CLOUDSDK_VERSION'
  entrypoint: '/bin/bash'
  args:
  - '-c'
  - |
    set -x
    gcloud --quiet container images delete gcr.io/${PROJECT_ID}/${_SERVICE}:${COMMIT_SHA}
    gcloud --quiet run services delete $_SERVICE-$(cat _RND) --region ${_REGION} --platform managed
    set +x
    echo "View build details in the console: https://console.cloud.google.com/cloud-build/builds/${BUILD_ID}"
  dir: '${_SAMPLE_DIR}'

substitutions:
  _CLOUDSDK_VERSION: latest
  _REGION: us-central1
  _SERVICE: go-cloud-run-hello-world
  _SAMPLE_DIR: golang/go-cloud-run-hello-world