steps:
  - id: Create namespace
    name: 'gcr.io/cloud-builders/kubectl'
    entrypoint: '/bin/bash'
    args:
    - '-c'
    - |
      kubectl config view
      gcloud container clusters get-credentials $$CLOUDSDK_CONTAINER_CLUSTER
      kubectl create namespace $$TEST_NAMESPACE
      echo "Kubernetes Namespace is $$TEST_NAMESPACE"
    dir: '/workspace/golang/go-hello-world'

  - id: 'Deploy to staging'
    name: 'gcr.io/k8s-skaffold/skaffold:latest'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      skaffold run -p cloudbuild -l $BUILD_ID -n $$TEST_NAMESPACE -d $$SKAFFOLD_DEFAULT_REPO
    dir: '/workspace/golang/go-hello-world'

  - id: 'Get Endpoint'
    name: 'gcr.io/cloud-builders/kubectl'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      service=$$HELLO_WORLD_SERVICE
      echo 'service is' $service
      get_externalIP() {
        kubectl get service $service --namespace $$TEST_NAMESPACE -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
      }
      until [[ -n "$(get_externalIP)" ]]; do
        echo "Querying for external IP $service"
        sleep 3
      done
      echo "$(get_externalIP):$(kubectl get service $service --namespace $$TEST_NAMESPACE -o jsonpath='{.spec.ports[0].port}')" > _externalIP
      echo "External IP and port for $service is $(cat _externalIP)"

  - id: 'Integration tests'
    name: 'gcr.io/cloud-builders/curl'
    entrypoint: '/bin/bash'
    args:
    - '-c'
    - |
      set -e 
      # Testing connection
      chmod +x test_connection.sh
      ./test_connection.sh -r 20 -i 3 -u http://$(cat _externalIP)
      # Testing content
      keyword='Congratulations'
      chmod +x test_content.sh
      ./test_content.sh -r 25 -i 3 -u http://$(cat _externalIP) -k $keyword
    dir: '/workspace'

  - id: 'Delete namespaces'
    name: 'gcr.io/cloud-builders/kubectl'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      kubectl delete namespace $$TEST_NAMESPACE

options:
    env:
    - CLOUDSDK_COMPUTE_ZONE=us-central1-a
    - CLOUDSDK_CONTAINER_CLUSTER=staging
    - SKAFFOLD_DEFAULT_REPO=gcr.io/$PROJECT_ID
    - TEST_NAMESPACE=test-$BUILD_ID-go-hello-world
    - HELLO_WORLD_SERVICE=go-hello-world-external