# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:

- id: 'create k8s namespace'
  name: 'gcr.io/cloud-builders/kubectl'
  args: ['create','namespace','test-$BUILD_ID']
  waitFor: ['-'] # start immediately

- id: 'deploy to staging'
  name: 'gcr.io/$PROJECT_ID/skaffold:alpha'
  args: ['run', 
         '-p', 'cloudbuild',
         '-l', '$BUILD_ID',
         '-n', 'test-$BUILD_ID']
  dir: '/workspace/${_LANGUAGE}/${_LANGUAGE}-${_TEMPLATE}'
  waitFor: ['create k8s namespace']


- id: 'get endpoint'
  name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: 'bash'
  args: 
  - '-c'
  - |
    get_externalIp() {
      kubectl get service ${_LANGUAGE}-${_TEMPLATE}-external --namespace=test-$BUILD_ID -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
    }

    until [[ -n "$(get_externalIp)" ]]; do
        echo "querying for external ip"
        sleep 3
    done

    echo "$(get_externalIp)" > _externalIP # save external Ip for use in next step
    echo "External Ip is $(cat _externalIP)"
  waitFor: ['deploy to staging']

- id: 'integration tests'
  name: 'gcr.io/cloud-builders/curl'
  entrypoint: '/bin/bash'
  args: 
  - '-c'
  - |
    string="Hello World!"
    if curl -s "http://$(cat _externalIP)" | grep -q "$string"; then
      echo "'$string' found"
    else
      echo "'$string' not found"
      exit 1
    fi
  waitFor: ['get endpoint']

- id: 'delete namespace'
  name: 'gcr.io/cloud-builders/kubectl'
  args: ['delete', 'namespaces', 'test-$BUILD_ID']
  waitFor: ['integration tests']

substitutions:
   _LANGUAGE: java
   _TEMPLATE: hello-world
options:
  env:
    # location/name of GKE cluster (used by all kubectl commands)
    - CLOUDSDK_COMPUTE_ZONE=us-central1-a
    - CLOUDSDK_CONTAINER_CLUSTER=staging    
    - SKAFFOLD_DEFAULT_REPO=gcr.io/$PROJECT_ID
