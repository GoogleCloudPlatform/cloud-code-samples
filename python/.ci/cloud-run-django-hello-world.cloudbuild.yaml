steps:
- id: docker build
  name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/$_SERVICE-$COMMIT_SHA', '.']
  dir: 'python/cloud-run-django-hello-world'

- id: docker push
  name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/$_SERVICE-$COMMIT_SHA']

- id: Deploy to Cloud Run
  name: 'gcr.io/cloud-builders/gcloud'
  args:
  - run
  - deploy
  - $_SERVICE-$COMMIT_SHA
  - --image
  - gcr.io/$PROJECT_ID/$_SERVICE-$COMMIT_SHA
  - --region
  - ${_REGION} # e.g. us-central1
  - --platform
  - managed
  - --allow-unauthenticated

- id: 'Get Cloud Run URL'
  name: 'gcr.io/cloud-builders/gcloud:$_CLOUDSDK_VERSION'
  entrypoint: '/bin/bash'
  args:
  - '-c'
  - |
    get_url() {
        gcloud run services describe $_SERVICE-$COMMIT_SHA --format 'value(status.url)' \
          --platform managed --region ${_REGION}
    }
    echo $(get_url) > _service_url
    echo "Cloud Run URL for $_SERVICE is $(cat _service_url)"
  dir: 'python/cloud-run-django-hello-world'

- id: 'Integration Tests'
  name: 'gcr.io/cloud-builders/curl:latest'
  entrypoint: '/bin/bash'
  args:
  - '-c'
  - |
    set -ex
    chmod +x test_content.sh
    ./test_content.sh $(cat _service_url)
  dir: 'python/cloud-run-django-hello-world'

- id: 'Teardown'
  name: 'gcr.io/cloud-builders/gcloud:$_CLOUDSDK_VERSION'
  entrypoint: '/bin/bash'
  args:
  - '-c'
  - |
    set -ex
    gcloud --quiet container images delete gcr.io/$PROJECT_ID/$_SERVICE-$COMMIT_SHA
    gcloud --quiet run services delete $_SERVICE-$COMMIT_SHA --region $_REGION --platform managed
    echo "View build details in the console: https://console.cloud.google.com/cloud-build/builds/${BUILD_ID}"
  
images:
- gcr.io/$PROJECT_ID/$_SERVICE-$COMMIT_SHA

substitutions:
  _CLOUDSDK_VERSION: latest
  _SERVICE: run-django-helloworld
  _REGION: us-central1